.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "" "" "" "" ""
.hy
.SH clasquinator
.PP
This folder contains a library for yabasic that allows yabasic to
display a variety of dialogs in text mode without making use of external
commands.
.PP
\f[I]Some\f[] routines will perhaps also be made available in graphics
mode.
Maybe, one day.
I am a better text mode programmer, what can I say?
.PP
The library is written as a textmode application and must be run in a
terminal.
It will not be useful in a headless script.
.PP
The entire set of libraries focuses on sane defaults and getting basic
functionality into yabasic.
.PP
The images below are for illustration only.
The exact appearance of the dialogs will depend on your system settings.
.PP
Developed on elementary OS 0.4 "Loki" (i.e.
Linux), but it should work on any *NIX system that will run yabasic.
Testing on Windows has been far more sketchy, since I don\[aq]t have a
windows box here, but I did what I could in my lunch break at work ;\-).
.PP
The library should exist either in the same folder as your program
(symlinks work) or in the standard yabasic library location on your
system.
.PP
To use the library, use the command
.IP
.nf
\f[C]
import\ clasquinatorlib
\f[]
.fi
.PP
You should \f[B]not\f[] use this library and one of the others in this
set that provides dialogs concurrently, because they replicate
subroutine names.
Pick the right one for your program and stick with it!
.PP
Unlike the other libraries, you cannot use * to break a line in your
text variables.
Keep that in mind if compatibility between the libraries is important.
.PP
By default, widgets are drawn in cyan, with button and menu triggers in
red and the title in blue.
But you can override this by setting the GLOBAL variables
\f[I]menu_colour*, *\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]~\f[I]c\f[]~\f[I]o\f[]\f[I]l\f[]\f[I]o\f[]\f[I]u\f[]\f[I]r\f[]\f[]
and \f[I]trigger_colour$\f[].
There is a routine ChangeColour() to make this easier.
.PP
The "buttons" are not mouse\-aware.
.PP
The first letter of each button or menu item automatically becomes the
trigger.
Both lower and upper case variants will activate it.
It is up to you to ensure that you do not use menu items that start with
the same letter.
.PP
\f[I]Hint\f[]: You can always number them, e.g.
.IP
.nf
\f[C]
menuitem1$\ =\ "1.File"
\f[]
.fi
.PP
This will make the menu react to the "1" key being pressed, rather than
"f" or "F".
.PP
If the text of a message (usually in the variable \f[I]text$\f[]) is too
long to fit in one line, it will be truncated.
This may vary with the width of the user\[aq]s terminal window, so be
conservative!
.PP
Excessive quote marks (required in other libraries and often supplied by
EncloseText$() or "") will be removed by the library to maintain
compatibility.
.PP
Excessive spaces at the \f[I]front and back\f[] of
\f[I]text*\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]b\f[]\f[I]e\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]m\f[]\f[I]m\f[]\f[I]e\f[]\f[I]d\f[], \f[I]b\f[]\f[I]u\f[]\f[I]t\f[]\f[I]m\f[]\f[I]u\f[]\f[I]l\f[]\f[I]t\f[]\f[I]i\f[]\f[I]p\f[]\f[I]l\f[]\f[I]e\f[]\f[I]s\f[]\f[I]p\f[]\f[I]a\f[]\f[I]c\f[]\f[I]e\f[]\f[I]s\f[] * \f[I]w\f[]\f[I]i\f[]\f[I]t\f[]\f[I]h\f[]\f[I]i\f[]\f[I]n\f[] * *\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[]\f[]
will be maintained.
.PP
This library is currently still in the development stages and not really
usable.
But watch this space!
.SS Variables
.PP
This library requires a small number of \f[I]global\f[] variables.
You do not need to initialize them, but don\[aq]t use the following
variable names in your program unless you have a very good reason.
.IP \[bu] 2
\f[I]menu_colour$\f[]
.IP \[bu] 2
\f[I]title_colour$\f[]
.IP \[bu] 2
\f[I]trigger_colour$\f[]
.IP \[bu] 2
\f[I]screenheight\f[]
.IP \[bu] 2
\f[I]screenwidth\f[]
.SS External utilities required
.PP
I didn\[aq]t quite manage to get away with writing this library without
making \f[I]any\f[] system calls.
You will need the following commands to be installed on your system.
.IP \[bu] 2
Linux
.RS 2
.IP \[bu] 2
ls
.IP \[bu] 2
grep
.IP \[bu] 2
pwd
.IP \[bu] 2
cut
.RE
.IP \[bu] 2
Windows
.RS 2
.IP \[bu] 2
echo
.IP \[bu] 2
cd
.IP \[bu] 2
dir
.RE
.PP
If you don\[aq]t have these, your system is broken and you really,
really need to reinstall your operating system.
So I\[aq]m not going to worry about it.
.SS Routines available:
.PP
This library poaches as many ideas as possible from the other four
dialog\-providing libraries, but there is not 100% compatibility here,
so we will not divide things into Common and Clasquinator\-specific
sections.
.IP \[bu] 2
\f[B]ChangeColour\f[](menu,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
trigger) + \f[I]C\f[]\f[I]h\f[]\f[I]a\f[]\f[I]n\f[]\f[I]g\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]l\f[]\f[I]o\f[]\f[I]u\f[]\f[I]r\f[]\f[I]s\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]y\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]*
is used to draw most elements.
.RS 2
.IP \[bu] 2
The value \f[I]title$\f[] is used to print the title of those widgets
that have them (but only in the default command set, in the others like
\f[I]blablaDlg2()\f[], \f[I]blablaDlg3()\f[] and so on it is calculated
to either black or white for legibility).
.IP \[bu] 2
The value \f[I]trigger$\f[] is the highlighted letter on buttons and
menu items.
.IP \[bu] 2
The colours available are the normal ones yabasic can handle, namely
"black", "white", "red", "blue", "green", "yellow", "cyan" and "magenta"
(which can be abbreviated as "bla", "whi", "red", "blu", "gre", "yel",
"cya" and "mag" respectively).
.IP \[bu] 2
The library does not check if the two colours are identical, or if they
complement each other visually.
If you want to make your menus unreadable, more power to you! +The
background colour of widgets is always black (well, actually, it is
whatever your terminal\[aq]s default background colour is), but your
program\[aq]s colours will be restored to whatever they were when a
widget closes.
.IP \[bu] 2
To return to the default set, use the command
\f[I]ChangeColourToDefault\f[]().
.RE
.IP \[bu] 2
\f[B]ClearDlg\f[]()
.RS 2
.IP \[bu] 2
On \f[I]dialog\f[] and \f[I]whiptail\f[], this clears the dialog from
your terminal.
Same as the yabasic command CLEAR SCREEN, but may work better if you are
expecting to issue another Linux command immediately.
.IP \[bu] 2
On \f[I]zenity\f[], \f[I]clasquinator\f[] and \f[I]kdialog\f[], dummy
routines are provided for compatibility so that you do not need to
rewrite your code.
.RE
.IP \[bu] 2
**EncloseText* * (\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.RS 2
.IP \[bu] 2
A simplified version of the \f[I]EncloseString$\f[]() routine that can
be found in the \f[I]linuxmisclib\f[] library
.IP \[bu] 2
Encloses a string in double quotes, if it isn\[aq]t already.
.IP \[bu] 2
Therefore \f[I]a$ =
EncloseText$("This is text")* gives the same result as *a$ = ""This is
text""\f[]
.IP \[bu] 2
Mostly for use with filenames that may include spaces.
.RE
.IP \[bu] 2
**getcmd* * ()+\f[I]R\f[]\f[I]e\f[]\f[I]t\f[]\f[I]u\f[]\f[I]r\f[]\f[I]n\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]m\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]s\f[]\f[I]e\f[]\f[I]t\f[]\f[I]a\f[]\f[I]v\f[]\f[I]a\f[]\f[I]i\f[]\f[I]l\f[]\f[I]a\f[]\f[I]b\f[]\f[I]l\f[]\f[I]e\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]i\f[]\f[I]s\f[]\f[I]r\f[]\f[I]e\f[]\f[I]a\f[]\f[I]l\f[]\f[I]l\f[]\f[I]y\f[]\f[I]j\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]m\f[]\f[I]e\f[], \f[I]t\f[]\f[I]o\f[]\f[I]s\f[]\f[I]t\f[]\f[I]o\f[]\f[I]p\f[]\f[I]m\f[]\f[I]e\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]g\f[]\f[I]e\f[]\f[I]t\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]c\f[]\f[I]o\f[]\f[I]n\f[]\f[I]f\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]d\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]l\f[]\f[I]e\f[]\f[I]I\f[]\f[I]a\f[]\f[I]m\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]f\f[]\f[I]o\f[]\f[I]u\f[]\f[I]r\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]i\f[]\f[I]e\f[]\f[I]s\f[]\f[I]s\f[]\f[I]i\f[]\f[I]m\f[]\f[I]u\f[]\f[I]l\f[]\f[I]t\f[]\f[I]a\f[]\f[I]n\f[]\f[I]e\f[]\f[I]o\f[]\f[I]u\f[]\f[I]s\f[]\f[I]l\f[]\f[I]y\f[].+\f[I]H\f[]\f[I]o\f[]\f[I]w\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]r\f[], \f[I]y\f[]\f[I]o\f[]\f[I]u\f[]\f[I]c\f[]\f[I]o\f[]\f[I]u\f[]\f[I]l\f[]\f[I]d\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]i\f[]\f[I]t\f[]\f[I]t\f[]\f[I]o\f[]\f[I]t\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]c\f[]\f[I]h\f[]\f[I]u\f[]\f[I]t\f[]\f[I]i\f[]\f[I]l\f[]\f[I]i\f[]\f[I]t\f[]\f[I]y\f[](\f[I]o\f[]\f[I]r\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]y\f[], \f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]a\f[]\f[I]s\f[]\f[I]e\f[]\f[I]o\f[]\f[I]f\f[]\f[I]c\f[]\f[I]l\f[]\f[I]a\f[]\f[I]s\f[]\f[I]q\f[]\f[I]u\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]t\f[]\f[I]o\f[]\f[I]r\f[])\f[I]i\f[]\f[I]s\f[]\f[I]c\f[]\f[I]u\f[]\f[I]r\f[]\f[I]r\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[]\f[I]l\f[]\f[I]y\f[]\f[I]i\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]i\f[]\f[I]f\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]s\f[]\f[I]s\f[]\f[I]a\f[]\f[I]f\f[]\f[I]e\f[]\f[I]t\f[]\f[I]o\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]r\f[]\f[I]o\f[]\f[I]u\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]s\f[]\f[I]n\f[]\f[I]o\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]m\f[]\f[I]o\f[]\f[I]n\f[]\f[I]l\f[]\f[I]i\f[]\f[I]s\f[]\f[I]t\f[].+\f[I]e\f[].\f[I]g\f[], *\f[I]i\f[]\f[I]f\f[]\f[I]g\f[]\f[I]e\f[]\f[I]t\f[]\f[I]c\f[]\f[I]m\f[]\f[I]d\f[]()
= "clasquinator" SubmenuDlg(options ....)*
.RS 2
.IP \[bu] 2
or \f[I]if getcmd$() = "zenity" ZNotifyDlg("this is a notification")\f[]
.RE
.IP \[bu] 2
**GetDirDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Select a directory to open.
.IP \[bu] 2
Displays the available directories but requires user to type it in.
.IP \[bu] 2
The value \f[I]title$\f[] is the title on top of the widget
.IP \[bu] 2
The value \f[I]start$\f[] is the initial directory to start from.
If blank or not supplied,this defaults to the current directory.
.IP \[bu] 2
Data entry is CASE\-SENSITIVE, but you do not need to type the quote
marks supplied for filenames with spaces.
.IP \[bu] 2
Result is returned as a string value with quote marks and extra (leading
or trailing) spaces stripped off.
.IP \[bu] 2
An empty string is returned, if there are no existing directories.
.IP \[bu] 2
ONLY available in \f[I]clasquinator\f[], but there are equivalents in
\f[I]zenity\f[] and \f[I]kdialog\f[].
.IP \[bu] 2
Now works in windows, but there are display bugs to work out.
.IP \[bu] 2
\f[I]Example\f[]:
.RE
.IP
.nf
\f[C]
a$\ =\ GetDirDlg$("Pick\ a\ folder",\ "Which\ directory\ would\ you\ like\ to\ see?","~")
\f[]
.fi
.PP
[IMAGE: GetDirDlg (./imgs/GetDirDlg.png)]
.IP \[bu] 2
**GetDirDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Select a directory to open.
.IP \[bu] 2
Same as GetDirDlg$() but looks different.
.IP \[bu] 2
\f[I]Example\f[]:
.RE
.IP
.nf
\f[C]
a$\ =\ GetDirDlg2$("Pick\ a\ folder",\ "Which\ directory\ would\ you\ like\ to\ see?","~")
\f[]
.fi
.PP
[IMAGE: GetDirDlg2 (./imgs/GetDirDlg2.png)]
.IP \[bu] 2
**GetDirDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Select a directory to open.
.IP \[bu] 2
Same as GetDirDlg$() but looks different.
.IP \[bu] 2
\f[I]Example\f[]:
.RE
.IP
.nf
\f[C]
a$\ =\ GetDirDlg3$("Pick\ a\ folder",\ "Which\ directory\ would\ you\ like\ to\ see?","~")
\f[]
.fi
.PP
[IMAGE: GetDirDlg3 (./imgs/GetDirDlg3.png)]
.IP \[bu] 2
**GetDirDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Select a directory to open.
.IP \[bu] 2
Same as GetDirDlg$() but looks different.
.IP \[bu] 2
\f[I]Example\f[]:
.RE
.IP
.nf
\f[C]
a$\ =\ GetDirDlg4$("Pick\ a\ folder",\ "Which\ directory\ would\ you\ like\ to\ see?","~")
\f[]
.fi
.PP
[IMAGE: GetDirDlg4 (./imgs/GetDirDlg4.png)]
.IP \[bu] 2
**GetFileDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**GetFileDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**GetFileDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**GetFileDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Select a file to open.
.IP \[bu] 2
Displays the available files but requires user to type it in.
.IP \[bu] 2
The value \f[I]title$\f[] is the title on top of the widget
.IP \[bu] 2
The value \f[I]start$\f[] is the initial directory to start from.
If blank or not supplied,this defaults to the current directory.
.IP \[bu] 2
Data entry is CASE\-SENSITIVE, but you do not need to type the quote
marks supplied for filenames with spaces.
.IP \[bu] 2
Result is returned as a string value with quote marks and extra (leading
or trailing) spaces stripped off.
.IP \[bu] 2
An empty string is returned.
if there are no existing files.
.IP \[bu] 2
ONLY available in \f[I]clasquinator\f[], but there are equivalents in
\f[I]zenity\f[] and \f[I]kdialog\f[].
.RE
.IP \[bu] 2
**InputDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**InputDlg2* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**InputDlg3* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**InputDlg4* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel) + \f[I]P\f[]\f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[]\f[I]s\f[]\f[I]a\f[]\f[I]o\f[]\f[I]n\f[]\f[I]e\f[] − \f[I]l\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]a\f[]\f[I]l\f[]\f[I]o\f[]\f[I]g\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]o\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]c\f[]\f[I]h\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]r\f[]\f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]t\f[]\f[I]y\f[]\f[I]p\f[]\f[I]e\f[]\f[I]a\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]a\f[]\f[I]n\f[]\f[I]s\f[]\f[I]w\f[]\f[I]e\f[]\f[I]r\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
is the title on top of the widget.
.RS 2
.IP \[bu] 2
The values
\f[I]ok*\f[I]a\f[]\f[I]n\f[]\f[I]d\f[] * \f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]c\f[]\f[I]e\f[]\f[I]l\f[]\f[]
are not used in clasquinator and may be omitted.
They are kept in the code for compatibility reasons.
.IP \[bu] 2
ENTER accepts the input, which can also be an empty string.
.IP \[bu] 2
The empty string counts as the equivalent of a cancel button.
.IP \[bu] 2
The result is returned as a string value.
.IP \[bu] 2
\f[I]Examples:\f[]
.RE
.IP
.nf
\f[C]
a$\ =\ InputDlg$("What\ is\ your\ name?",\ "Who\ are\ you?")
\f[]
.fi
.PP
[IMAGE: InputDlg (./imgs/InputDlg.png)]
.IP
.nf
\f[C]
a$\ =\ InputDlg2$("What\ is\ your\ name?",\ "Who\ are\ you?")
\f[]
.fi
.PP
[IMAGE: InputDlg2 (./imgs/InputDlg2.png)]
.IP \[bu] 2
**MakeDirDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeDirDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeDirDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeDirDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Create a directory.
.IP \[bu] 2
Same as \f[I]GetDirDlg$()\f[] but allows user to type a new filename so
that it can be created.
.IP \[bu] 2
Will not allow duplicate filenames to be selected.
.IP \[bu] 2
see \f[I]GetDirDlg$()\f[] for examples.
.RE
.IP \[bu] 2
**MakeFileDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeFileDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeFileDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.IP \[bu] 2
**MakeFileDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
text,\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]r\f[]\f[I]t\f[])
.RS 2
.IP \[bu] 2
Create a file.
.IP \[bu] 2
Same as \f[I]GetFileDlg$()\f[] but allows user to type a new filename so
that it can be created.
.IP \[bu] 2
Will not allow duplicate filenames to be selected.
.IP \[bu] 2
see \f[I]GetDirDlg$()\f[] for examples.
.RE
.IP \[bu] 2
**MenuDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**MenuDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**MenuDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**MenuDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.RS 2
.IP \[bu] 2
Create a one\-line menu of options for the user to choose from.
.IP \[bu] 2
The value \f[I]title$\f[] is the title on top of the widget.
.IP \[bu] 2
The value \f[I]menustring$\f[] is the list of menu options as a single
string, separated by hash signs (#).
Spaces are allowed.
.IP \[bu] 2
The value \f[I]level\f[] can be either 0 for a primary menu or 1 for a
submenu.
.IP \[bu] 2
If \f[I]level\f[] = 1
\f[I]mainmenu*\f[I]m\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]l\f[]\f[I]s\f[]\f[I]o\f[]\f[I]b\f[]\f[I]e\f[]\f[I]s\f[]\f[I]u\f[]\f[I]p\f[]\f[I]p\f[]\f[I]l\f[]\f[I]i\f[]\f[I]e\f[]\f[I]d\f[], \f[I]o\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]r\f[]\f[I]w\f[]\f[I]i\f[]\f[I]s\f[]\f[I]e\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]s\f[]\f[I]n\f[]\f[I]o\f[]\f[I]t\f[]\f[I]r\f[]\f[I]e\f[]\f[I]q\f[]\f[I]u\f[]\f[I]i\f[]\f[I]r\f[]\f[I]e\f[]\f[I]d\f[].\f[I]T\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]i\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[] * \f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[]
of the originating menu.
.IP \[bu] 2
The first letter of menu item automatically becomes the trigger.
Both lower and upper case variants will activate it.
It is up to you to ensure that you do not use menu items that start with
the same letter.
.IP \[bu] 2
Menus will only be displayed to the width of the terminal, so keep them
short!
.IP \[bu] 2
Results are returned as a string variable, which will be the trigger in
\f[I]lowercase\f[].
.IP \[bu] 2
Submenus can also be created with the
\f[I]SubMenuDlg(\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring$)* routine, which is an alias to this one and does not require the *level* parameter.Therefore the following two commands are completely equivalent: ``` MenuDlg$("File
menu","Open#Close#Exit",1, "File#Edit#Help") SubMenuDlg$("File
menu","Open#Close#Exit","File#Edit#Help") ``` \f[]Examples:*
.RE
.IP
.nf
\f[C]
a$\ =\ MenuDlg$("Main\ Menu",\ "File#Edit#Help",\ 0)
\f[]
.fi
.PP
[IMAGE: MenuDlg (./imgs/MenuDlg.png)]
.IP
.nf
\f[C]
a$\ =\ MenuDlg$("Help\ Menu",\ "Help#About",\ 1,\ "File#Edit#Help")
\f[]
.fi
.PP
[IMAGE: SubMenuDlg (./imgs/SubMenuDlg.png)]
.PP
As you would expect by now there are commands called
\f[I]MenuDlg2()*\f[I]a\f[]\f[I]n\f[]\f[I]d\f[] * \f[I]S\f[]\f[I]u\f[]\f[I]b\f[]\f[I]M\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[]2()\f[]
and so on to change the appearance of the menus.
.IP
.nf
\f[C]
a$\ =\ SubMenuDlg2$("Help\ Menu",\ "Help#About",\ "File#Edit#Help")
\f[]
.fi
.PP
[IMAGE: SubMenuDlg2 (./imgs/SubMenuDlg2.png)]
.IP \[bu] 2
\f[B]MessageDlg\f[](text,\f[I]o\f[]\f[I]k\f[])
.IP \[bu] 2
\f[B]MessageDlg2\f[](text,\f[I]o\f[]\f[I]k\f[])
.IP \[bu] 2
\f[B]MessageDlg3\f[](text,\f[I]o\f[]\f[I]k\f[])
.IP \[bu] 2
\f[B]MessageDlg4\f[](text,\f[I]o\f[]\f[I]k\f[])
.RS 2
.IP \[bu] 2
Display a simple message with an OK button.
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK.
.IP \[bu] 2
You only have one line to play with, so keep those messages short!
.IP \[bu] 2
Returns nothing, therefore does not actually trap the keypress.
But the trigger is highlighted to ensure uniformity among the
library\[aq]s widgets
.IP \[bu] 2
\f[I]Examples:\f[]
.RE
.IP
.nf
\f[C]
MessageDlg("This\ is\ a\ simple\ message\ dialog.\ Close\ it\ with\ ENTER\ or\ O.","OK")
\f[]
.fi
.PP
[IMAGE: MessageDlg (./imgs/MessageDlg.png)]
.IP
.nf
\f[C]
MessageDlg2("This\ is\ a\ simple\ message\ dialog.\ Close\ it\ with\ ENTER\ or\ O.","OK")
\f[]
.fi
.PP
[IMAGE: MessageDlg2 (./imgs/MessageDlg2.png)]
.IP \[bu] 2
**PasswordDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**PasswordDlg2* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**PasswordDlg3* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[], cancel$)
.IP \[bu] 2
**PasswordDlg4* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel) + \f[I]S\f[]\f[I]u\f[]\f[I]p\f[]\f[I]p\f[]\f[I]l\f[]\f[I]i\f[]\f[I]e\f[]\f[I]d\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]p\f[]\f[I]a\f[]\f[I]t\f[]\f[I]i\f[]\f[I]b\f[]\f[I]i\f[]\f[I]l\f[]\f[I]i\f[]\f[I]t\f[]\f[I]y\f[]\f[I]p\f[]\f[I]u\f[]\f[I]r\f[]\f[I]p\f[]\f[I]o\f[]\f[I]s\f[]\f[I]e\f[]\f[I]s\f[], \f[I]b\f[]\f[I]u\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]r\f[]\f[I]e\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]s\f[]\f[I]j\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]a\f[]\f[I]n\f[]\f[I]a\f[]\f[I]l\f[]\f[I]i\f[]\f[I]a\f[]\f[I]s\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[] * \f[I]I\f[]\f[I]n\f[]\f[I]p\f[]\f[I]u\f[]\f[I]t\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[]*()
\- inputs are not obfuscated with asterisks.
.IP \[bu] 2
**RadioDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**RadioDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**RadioDlg3* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**RadioDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]l\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[], \f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.RS 2
.IP \[bu] 2
In \f[I]clasquinator\f[], this is an alias to \f[I]MenuDlg$()\f[],
provided for compatibility.
.RE
.IP \[bu] 2
\f[B]StringDisplayDlg\f[](string,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]StringDisplayDlg2\f[](string,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]StringDisplayDlg3\f[](string,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]StringDisplayDlg4\f[](string,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit) + \f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]b\f[]\f[I]o\f[]\f[I]x\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]m\f[]\f[I]i\f[]\f[I]d\f[]\f[I]d\f[]\f[I]l\f[]\f[I]e\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]s\f[]\f[I]c\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]b\f[]\f[I]o\f[]\f[I]x\f[]\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]a\f[]\f[I]l\f[]\f[I]w\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]b\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]l\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]s\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]o\f[]\f[I]p\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]b\f[]\f[I]o\f[]\f[I]t\f[]\f[I]t\f[]\f[I]o\f[]\f[I]m\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]l\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]t\f[]\f[I]h\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]l\f[]\f[I]u\f[]\f[I]m\f[]\f[I]n\f[]\f[I]s\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]l\f[]\f[I]e\f[]\f[I]f\f[]\f[I]t\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]r\f[]\f[I]i\f[]\f[I]g\f[]\f[I]h\f[]\f[I]t\f[].\f[I]R\f[]\f[I]e\f[]\f[I]s\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]l\f[]\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]c\f[]\f[I]o\f[]\f[I]u\f[]\f[I]n\f[]\f[I]t\f[]\f[I]a\f[]\f[I]s\f[]\f[I]a\f[]\f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]p\f[]\f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]s\f[]\f[I]i\f[]\f[I]n\f[]\f[I]s\f[]\f[I]o\f[]\f[I]m\f[]\f[I]e\f[]\f[I]o\f[]\f[I]p\f[]\f[I]e\f[]\f[I]r\f[]\f[I]a\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]s\f[]\f[I]y\f[]\f[I]s\f[]\f[I]t\f[]\f[I]e\f[]\f[I]m\f[]!+ * \f[I]A\f[]\f[I]n\f[]\f[I]y\f[] * \f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]e\f[]\f[I]x\f[]\f[I]i\f[]\f[I]t\f[]\f[I]s\f[]\f[I]i\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]h\f[]\f[I]a\f[]\f[I]s\f[]\f[I]b\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]p\f[]\f[I]l\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]d\f[], \f[I]o\f[]\f[I]r\f[]\f[I]s\f[]\f[I]h\f[]\f[I]o\f[]\f[I]w\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]n\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[]\f[I]s\f[]\f[I]c\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[]\f[I]i\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]r\f[]\f[I]e\f[]\f[I]i\f[]\f[I]s\f[]\f[I]m\f[]\f[I]o\f[]\f[I]r\f[]\f[I]e\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
is the title on top of the widget.
.RS 2
.IP \[bu] 2
The value \f[I]exit$\f[] is the title of the button, normally
\f[I]OK\f[].
.IP \[bu] 2
This button is a dummy, just for looks.
.IP \[bu] 2
It works better if you keep your string reasonably short, since there is
no escape button if you make the user page through 100 pages!
.IP \[bu] 2
To open up a new line, embed " # " (a hash mark surrounded by spaces) in
your string.
You can even open up multiple lines with " # # " and so on.
.IP \[bu] 2
Returns nothing
.IP \[bu] 2
\f[I]Example:\f[]
.RE
.IP
.nf
\f[C]
a$\ =\ "This\ is\ the\ string\ to\ display.\ Let\[aq]s\ make\ it\ long\ so\ that\ wordwrap\ is\ enforced."
StringDisplayDlg(a$,\ "String\ Display\ Test",\ "OK")
OR
a$\ =\ "This\ is\ the\ string\ to\ display.\ Let\[aq]s\ make\ it\ long\ so\ that\ wordwrap\ is\ enforced."
StringDisplayDlg2(a$,\ "String\ Display\ Test",\ "OK")
\f[]
.fi
.PP
[IMAGE: StringDisplayDlg (./imgs/StringDisplayDlg.png)]
.PP
\f[I](Composite of the commands StringDisplayDlg() and
StringDisplayDlg2() pictured above)\f[]
.IP \[bu] 2
**SubMenuDlg* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**SubMenuDlg2* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**SubMenuDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.IP \[bu] 2
**SubMenuDlg4* * (\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
menustring,\f[I]m\f[]\f[I]a\f[]\f[I]i\f[]\f[I]n\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.RS 2
.IP \[bu] 2
see \f[I]MenuDlg$()\f[].
.RE
.IP \[bu] 2
\f[B]TestForDialogUtility$\f[]()
.RS 2
.IP \[bu] 2
Routine to test if the called utility actually exists on the system.
.IP \[bu] 2
An empty string returned means it does, otherwise an error message is
returned.
.IP \[bu] 2
in \f[I]clasquinator\f[], this is a dummy routine provided for
compatibility.
It will always return an empty string.
.RE
.IP \[bu] 2
\f[B]TextFileDlg\f[](filename,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]TextFileDlg2\f[](filename,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]TextFileDlg3\f[](filename,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit$)
.IP \[bu] 2
\f[B]TextFileDlg4\f[](filename,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit) + \f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[]\f[I]f\f[]\f[I]i\f[]\f[I]l\f[]\f[I]e\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]b\f[]\f[I]o\f[]\f[I]x\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]m\f[]\f[I]i\f[]\f[I]d\f[]\f[I]d\f[]\f[I]l\f[]\f[I]e\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]s\f[]\f[I]c\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[].+\f[I]I\f[]\f[I]n\f[]\f[I]a\f[]\f[I]p\f[]\f[I]p\f[]\f[I]e\f[]\f[I]a\f[]\f[I]r\f[]\f[I]a\f[]\f[I]n\f[]\f[I]c\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]l\f[]\f[I]o\f[]\f[I]o\f[]\f[I]k\f[]\f[I]s\f[]\f[I]e\f[]\f[I]x\f[]\f[I]a\f[]\f[I]c\f[]\f[I]t\f[]\f[I]l\f[]\f[I]y\f[]\f[I]l\f[]\f[I]i\f[]\f[I]k\f[]\f[I]e\f[] * \f[I]S\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[]() * \f[I]o\f[]\f[I]r\f[] * \f[I]S\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[]2() * \f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]s\f[]\f[I]o\f[]\f[I]o\f[]\f[I]n\f[], \f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]p\f[]\f[I]e\f[]\f[I]c\f[]\f[I]t\f[]\f[I]i\f[]\f[I]v\f[]\f[I]e\f[]\f[I]l\f[]\f[I]y\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]b\f[]\f[I]o\f[]\f[I]x\f[]\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]a\f[]\f[I]l\f[]\f[I]w\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]b\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]l\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]s\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]o\f[]\f[I]p\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]b\f[]\f[I]o\f[]\f[I]t\f[]\f[I]t\f[]\f[I]o\f[]\f[I]m\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]l\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]t\f[]\f[I]h\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]l\f[]\f[I]u\f[]\f[I]m\f[]\f[I]n\f[]\f[I]s\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]l\f[]\f[I]e\f[]\f[I]f\f[]\f[I]t\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]r\f[]\f[I]i\f[]\f[I]g\f[]\f[I]h\f[]\f[I]t\f[].\f[I]R\f[]\f[I]e\f[]\f[I]s\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]l\f[]\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]c\f[]\f[I]o\f[]\f[I]u\f[]\f[I]n\f[]\f[I]t\f[]\f[I]a\f[]\f[I]s\f[]\f[I]a\f[]\f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]p\f[]\f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]s\f[]\f[I]i\f[]\f[I]n\f[]\f[I]s\f[]\f[I]o\f[]\f[I]m\f[]\f[I]e\f[]\f[I]o\f[]\f[I]p\f[]\f[I]e\f[]\f[I]r\f[]\f[I]a\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]s\f[]\f[I]y\f[]\f[I]s\f[]\f[I]t\f[]\f[I]e\f[]\f[I]m\f[]!+ * \f[I]A\f[]\f[I]n\f[]\f[I]y\f[] * \f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]e\f[]\f[I]x\f[]\f[I]i\f[]\f[I]t\f[]\f[I]s\f[]\f[I]i\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]f\f[]\f[I]i\f[]\f[I]l\f[]\f[I]e\f[]\f[I]h\f[]\f[I]a\f[]\f[I]s\f[]\f[I]b\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]p\f[]\f[I]l\f[]\f[I]e\f[]\f[I]t\f[]\f[I]e\f[]\f[I]d\f[], \f[I]o\f[]\f[I]r\f[]\f[I]s\f[]\f[I]h\f[]\f[I]o\f[]\f[I]w\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]n\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[]\f[I]s\f[]\f[I]c\f[]\f[I]r\f[]\f[I]e\f[]\f[I]e\f[]\f[I]n\f[]\f[I]i\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]r\f[]\f[I]e\f[]\f[I]i\f[]\f[I]s\f[]\f[I]m\f[]\f[I]o\f[]\f[I]r\f[]\f[I]e\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
is the title on top of the widget.
.RS 2
.IP \[bu] 2
The value \f[I]exit$\f[] is the title of the button, normally
\f[I]OK\f[].
.IP \[bu] 2
This button is a dummy, just for looks.
.IP \[bu] 2
It works better if you keep your file reasonably short, since there is
no escape button if you make the user page through 100 pages!
.IP \[bu] 2
This is meant for simple text files.
Trying to feed it complex HTML or Markdown documents is not recommended.
.IP \[bu] 2
It is actually better if your text file is not formatted with hard
returns.
Rather let this routine handle the word wrapping.
.IP \[bu] 2
Returns nothing.
.IP \[bu] 2
\f[I]Example:\f[]
.RE
.IP
.nf
\f[C]
TextFileDlg2("./pg4.txt",\ "The\ Gettysburg\ Address",\ "OK")
\f[]
.fi
.PP
[IMAGE: TextFileDlg (./imgs/TextFileDlg.png)]
.IP \[bu] 2
\f[B]WaitDlg\f[](onoff, text$)
.IP \[bu] 2
\f[B]WaitDlg2\f[](onoff, text$)
.IP \[bu] 2
\f[B]WaitDlg3\f[](onoff, text$)
.IP \[bu] 2
\f[B]WaitDlg4\f[](onoff,
text$) + Display a small box with a centred one\-line "Please wait" message or anything else that requires no response. + Use this while you do something else that may take a while that does NOT involve printing to screen. + If you do print, it will be wiped out when you close the dialog. + Keep your message short! You only have thirty characters to play with. + To display the message, *onoff* should be 1 and *text$*
must be supplied.
.RS 2
.IP \[bu] 2
To remove the dialog and bring the original screen back up, just use
\f[I]WaitDlg(0)\f[].
This works even if you used \f[I]WaitDlg2()\f[] to create the dialog.
.IP \[bu] 2
Returns nothing.
.IP \[bu] 2
\f[I]Example:\f[]
.RE
.IP
.nf
\f[C]
WaitDlg2(1,\ "Please\ wait")
wait\ 4\ //this\ is\ where\ you\ would\ do\ other\ stuff
WaitDlg(0)
\f[]
.fi
.PP
[IMAGE: WaitDlg (./imgs/WaitDlg.png)]
.IP \[bu] 2
\f[B]YesNoDlg\f[](text,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[], no$)
.IP \[bu] 2
\f[B]YesNoDlg2\f[](text,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[], no$)
.IP \[bu] 2
\f[B]YesNoDlg3\f[](text,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[], no$)
.IP \[bu] 2
\f[B]YesNoDlg4\f[](text,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[],
no) + \f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]d\f[]\f[I]i\f[]\f[I]a\f[]\f[I]l\f[]\f[I]o\f[]\f[I]g\f[]\f[I]w\f[]\f[I]i\f[]\f[I]t\f[]\f[I]h\f[]\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[](\f[I]n\f[]\f[I]o\f[]\f[I]r\f[]\f[I]m\f[]\f[I]a\f[]\f[I]l\f[]\f[I]l\f[]\f[I]y\f[]\f[I]a\f[]\f[I]q\f[]\f[I]u\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]i\f[]\f[I]o\f[]\f[I]n\f[])\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]o\f[]\f[I]p\f[]\f[I]t\f[]\f[I]i\f[]\f[I]o\f[]\f[I]n\f[]\f[I]s\f[]\f[I]t\f[]\f[I]o\f[]\f[I]r\f[]\f[I]e\f[]\f[I]p\f[]\f[I]l\f[]\f[I]y\f[]\f[I]y\f[]\f[I]e\f[]\f[I]s\f[]\f[I]o\f[]\f[I]r\f[]\f[I]n\f[]\f[I]o\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]f\f[]\f[I]i\f[]\f[I]r\f[]\f[I]s\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]\f[I]t\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[] * \f[I]y\f[]\f[I]e\f[]\f[I]s\f[]*
and
\f[I]no*\f[I]v\f[]\f[I]a\f[]\f[I]r\f[]\f[I]i\f[]\f[I]a\f[]\f[I]b\f[]\f[I]l\f[]\f[I]e\f[]\f[I]s\f[]\f[I]w\f[]\f[I]i\f[]\f[I]l\f[]\f[I]l\f[]\f[I]b\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]h\f[]\f[I]o\f[]\f[I]t\f[]\f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]s\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]t\f[]\f[I]h\f[]\f[I]o\f[]\f[I]s\f[]\f[I]e\f[]\f[I]b\f[]\f[I]u\f[]\f[I]t\f[]\f[I]t\f[]\f[I]o\f[]\f[I]n\f[]\f[I]s\f[], \f[I]s\f[]\f[I]o\f[]\f[I]m\f[]\f[I]a\f[]\f[I]k\f[]\f[I]e\f[]\f[I]s\f[]\f[I]u\f[]\f[I]r\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]y\f[]\f[I]a\f[]\f[I]r\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]f\f[]\f[I]f\f[]\f[I]e\f[]\f[I]r\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[].\f[I]H\f[]\f[I]o\f[]\f[I]t\f[]\f[I]k\f[]\f[I]e\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]r\f[]\f[I]e\f[]\f[I]c\f[]\f[I]a\f[]\f[I]s\f[]\f[I]e\f[] − \f[I]i\f[]\f[I]n\f[]\f[I]s\f[]\f[I]e\f[]\f[I]n\f[]\f[I]s\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]v\f[]\f[I]e\f[].+ * \f[I]n\f[]\f[I]o\f[]\f[]
is actually a dummy here: pressing anything other than the hotkey for
\f[I]yes$* will return a no. + Instead of "Yes" and "No", these labels could also ber something like "Accept" and "Cancel". This is why this library does not have a separate *AcceptCancelDlg* routine. + NOTE: pressing ENTER means NO. If this is not what you want, just swap the labels *yes$\f[]
and
\f[I]no*\f[I]a\f[]\f[I]r\f[]\f[I]o\f[]\f[I]u\f[]\f[I]n\f[]\f[I]d\f[], \f[I]a\f[]\f[I]n\f[]\f[I]d\f[] * \f[I]y\f[]\f[I]e\f[]\f[I]s\f[]\f[]
will become the dummy that is the default on every keypress except the
hotkey for
\f[I]no*.+\f[I]e\f[].\f[I]g\f[].*\f[I]Y\f[]\f[I]e\f[]\f[I]s\f[]\f[I]N\f[]\f[I]o\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[](\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
no,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[], altsymbol$)\f[] \- See the second
example below.
.RS 2
.IP \[bu] 2
This will also reverse the way they are displayed.
This routine only tests for the button on the left.
.IP \[bu] 2
Returns 1 for yes and 0 for no.
.IP \[bu] 2
\f[I]Examples:\f[]
.RE
.IP
.nf
\f[C]
YesNoDlg("Can\ you\ see\ this?\ Press\ Y\ if\ you\ can.",\ "Yes!",\ "No")
\f[]
.fi
.PP
[IMAGE: YesNoDlg (./imgs/YesNoDlg.png)]
.IP
.nf
\f[C]

YesNoDlg4("Erase\ all\ data\ from\ the\ hard\ drive?.",\ "No!",\ "Yes")
\f[]
.fi
.PP
[IMAGE: YesNoDlg4 (./imgs/YesNoDlg4.png)]
