.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "" "" "" "" ""
.hy
.SH whiptail
.PP
This folder contains a library for yabasic that allows the use of the
Linux command \f[I]whiptail\f[] to display a variety of dialogs in text
mode.
.PP
The library will test for the presence of the whiptail command and will
exit gracefully if it is not present.
Whiptail is a textmode application and must be run in a terminal.
It will not be useful in a headless script.
.PP
The entire set of libraries focuses on sane defaults and getting basic
functionality into yabasic.
There are a lot of options that will not be implemented!
.PP
The images below are for illustration only.
The exact appearance of the dialogs will depend on your system settings.
.PP
Developed on elementary OS 0.4 "Loki" (i.e.
Linux), but it should work on any system that will run both yabasic and
the whiptail command.
.PP
The library should exist either in the same folder as your program or in
the standard yabasic library location on your system.
.PP
To use the library, use the command
.IP
.nf
\f[C]
import\ whiptaillib
\f[]
.fi
.PP
You should \f[B]not\f[] use this library and one of the others in this
set that provides dialogs concurrently, because they replicate
subroutine names.
Pick the right one for your program and stick with it!
.SS Routines available:
.SS Common Routines
.PP
\f[B]These routines are available on any of the four dialog\-providing
libraries.\f[]
.IP \[bu] 2
\f[B]ClearDlg\f[]() \- on dialog and whiptail, this clears the dialog
from your terminal.
Same as the yabasic command CLEAR SCREEN, but may work better if you are
expecting to issue another Linux command immediately.
On zenity, clasquinator and kdialog, dummy routines are provided for
compatibility so that you do not need to rewrite your code.
.IP \[bu] 2
**EncloseText* * (\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
\- A simplified version of the
\f[I]EncloseString*()\f[I]r\f[]\f[I]o\f[]\f[I]u\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]t\f[]\f[I]h\f[]\f[I]a\f[]\f[I]t\f[]\f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]b\f[]\f[I]e\f[]\f[I]f\f[]\f[I]o\f[]\f[I]u\f[]\f[I]n\f[]\f[I]d\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]l\f[]\f[I]i\f[]\f[I]n\f[]\f[I]u\f[]\f[I]x\f[]\f[I]m\f[]\f[I]i\f[]\f[I]s\f[]\f[I]c\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]y\f[] + \f[I]E\f[]\f[I]n\f[]\f[I]c\f[]\f[I]l\f[]\f[I]o\f[]\f[I]s\f[]\f[I]e\f[]\f[I]s\f[]\f[I]a\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]i\f[]\f[I]n\f[]\f[I]d\f[]\f[I]o\f[]\f[I]u\f[]\f[I]b\f[]\f[I]l\f[]\f[I]e\f[]\f[I]q\f[]\f[I]u\f[]\f[I]o\f[]\f[I]t\f[]\f[I]e\f[]\f[I]s\f[], \f[I]i\f[]\f[I]f\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]s\f[]\f[I]n\f[]′\f[I]t\f[]\f[I]a\f[]\f[I]l\f[]\f[I]r\f[]\f[I]e\f[]\f[I]a\f[]\f[I]d\f[]\f[I]y\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]r\f[]\f[I]e\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]e\f[] * \f[I]a\f[]
= EncloseText$("This is text")* gives the same result as *a$ = ""This is
text""\f[]
.RS 2
.IP \[bu] 2
Mostly for use with filenames that may include spaces.
.RE
.IP \[bu] 2
**getcmd* * ()−\f[I]r\f[]\f[I]e\f[]\f[I]t\f[]\f[I]u\f[]\f[I]r\f[]\f[I]n\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]m\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]s\f[]\f[I]e\f[]\f[I]t\f[]\f[I]a\f[]\f[I]v\f[]\f[I]a\f[]\f[I]i\f[]\f[I]l\f[]\f[I]a\f[]\f[I]b\f[]\f[I]l\f[]\f[I]e\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]i\f[]\f[I]s\f[]\f[I]i\f[]\f[I]s\f[]\f[I]r\f[]\f[I]e\f[]\f[I]a\f[]\f[I]l\f[]\f[I]l\f[]\f[I]y\f[]\f[I]j\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]m\f[]\f[I]e\f[], \f[I]t\f[]\f[I]o\f[]\f[I]s\f[]\f[I]t\f[]\f[I]o\f[]\f[I]p\f[]\f[I]m\f[]\f[I]e\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[]\f[I]g\f[]\f[I]e\f[]\f[I]t\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]c\f[]\f[I]o\f[]\f[I]n\f[]\f[I]f\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]d\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]l\f[]\f[I]e\f[]\f[I]I\f[]\f[I]a\f[]\f[I]m\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]f\f[]\f[I]o\f[]\f[I]u\f[]\f[I]r\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]i\f[]\f[I]e\f[]\f[I]s\f[]\f[I]s\f[]\f[I]i\f[]\f[I]m\f[]\f[I]u\f[]\f[I]l\f[]\f[I]t\f[]\f[I]a\f[]\f[I]n\f[]\f[I]e\f[]\f[I]o\f[]\f[I]u\f[]\f[I]s\f[]\f[I]l\f[]\f[I]y\f[].+\f[I]H\f[]\f[I]o\f[]\f[I]w\f[]\f[I]e\f[]\f[I]v\f[]\f[I]e\f[]\f[I]r\f[], \f[I]y\f[]\f[I]o\f[]\f[I]u\f[]\f[I]c\f[]\f[I]o\f[]\f[I]u\f[]\f[I]l\f[]\f[I]d\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]i\f[]\f[I]t\f[]\f[I]t\f[]\f[I]o\f[]\f[I]t\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]c\f[]\f[I]h\f[]\f[I]u\f[]\f[I]t\f[]\f[I]i\f[]\f[I]l\f[]\f[I]i\f[]\f[I]t\f[]\f[I]y\f[](\f[I]o\f[]\f[I]r\f[]\f[I]l\f[]\f[I]i\f[]\f[I]b\f[]\f[I]r\f[]\f[I]a\f[]\f[I]r\f[]\f[I]y\f[], \f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]a\f[]\f[I]s\f[]\f[I]e\f[]\f[I]o\f[]\f[I]f\f[]\f[I]c\f[]\f[I]l\f[]\f[I]a\f[]\f[I]s\f[]\f[I]q\f[]\f[I]u\f[]\f[I]i\f[]\f[I]n\f[]\f[I]a\f[]\f[I]t\f[]\f[I]o\f[]\f[I]r\f[])\f[I]i\f[]\f[I]s\f[]\f[I]c\f[]\f[I]u\f[]\f[I]r\f[]\f[I]r\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[]\f[I]l\f[]\f[I]y\f[]\f[I]i\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]i\f[]\f[I]f\f[]\f[I]i\f[]\f[I]t\f[]\f[I]i\f[]\f[I]s\f[]\f[I]s\f[]\f[I]a\f[]\f[I]f\f[]\f[I]e\f[]\f[I]t\f[]\f[I]o\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]r\f[]\f[I]o\f[]\f[I]u\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]s\f[]\f[I]n\f[]\f[I]o\f[]\f[I]t\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]o\f[]\f[I]m\f[]\f[I]m\f[]\f[I]o\f[]\f[I]n\f[]\f[I]l\f[]\f[I]i\f[]\f[I]s\f[]\f[I]t\f[].+\f[I]e\f[].\f[I]g\f[], *\f[I]i\f[]\f[I]f\f[]\f[I]g\f[]\f[I]e\f[]\f[I]t\f[]\f[I]c\f[]\f[I]m\f[]\f[I]d\f[]()
= "clasquinator" SubmenuDlg(options ....)*
.RS 2
.IP \[bu] 2
or \f[I]if getcmd$() = "zenity" ZNotifyDlg("this is a notification")\f[]
.RE
.IP \[bu] 2
**InputDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel) − \f[I]P\f[]\f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[]\f[I]s\f[]\f[I]a\f[]\f[I]o\f[]\f[I]n\f[]\f[I]e\f[] − \f[I]l\f[]\f[I]i\f[]\f[I]n\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]a\f[]\f[I]l\f[]\f[I]o\f[]\f[I]g\f[]\f[I]i\f[]\f[I]n\f[]\f[I]t\f[]\f[I]o\f[]\f[I]w\f[]\f[I]h\f[]\f[I]i\f[]\f[I]c\f[]\f[I]h\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]r\f[]\f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]t\f[]\f[I]y\f[]\f[I]p\f[]\f[I]e\f[]\f[I]a\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[I]a\f[]\f[I]n\f[]\f[I]s\f[]\f[I]w\f[]\f[I]e\f[]\f[I]r\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
is the title on top of the widget
.RS 2
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK.
.IP \[bu] 2
The value \f[I]cancel$\f[] is the text of the reject button, normally
Cancel.
.IP \[bu] 2
The result is returned as a string value.
.IP \[bu] 2
\f[I]Example:\f[]
.RS 2
.IP
.nf
\f[C]
a$\ =\ InputDlg$(EncloseText$("What\ is\ your\ name?"),\ EncloseText$("Who\ are\ you?"),\ "Accept",\ "Cancel")
\f[]
.fi
.PP
[IMAGE: InputDlg (./imgs/InputDlg.png)]
.RE
.RE
.IP \[bu] 2
\f[B]MenuDlg\f[](text,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
ok,\f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]c\f[]\f[I]e\f[]\f[I]l\f[],
menustring) − \f[I]C\f[]\f[I]r\f[]\f[I]e\f[]\f[I]a\f[]\f[I]t\f[]\f[I]e\f[]\f[I]a\f[]\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]o\f[]\f[I]f\f[]\f[I]o\f[]\f[I]p\f[]\f[I]t\f[]\f[I]i\f[]\f[I]o\f[]\f[I]n\f[]\f[I]s\f[]\f[I]f\f[]\f[I]o\f[]\f[I]r\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]u\f[]\f[I]s\f[]\f[I]e\f[]\f[I]r\f[]\f[I]t\f[]\f[I]o\f[]\f[I]c\f[]\f[I]h\f[]\f[I]o\f[]\f[I]o\f[]\f[I]s\f[]\f[I]e\f[]\f[I]f\f[]\f[I]r\f[]\f[I]o\f[]\f[I]m\f[] + \f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
has no effect in whiptail, but is kept here for compatibility and must
be supplied.
.RS 2
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK.
.IP \[bu] 2
The value \f[I]cancel$\f[] is the text of the reject button, normally
Cancel.
.IP \[bu] 2
The value menustring$ is the list of menu options as a single string,
separated by hash signs (#).
Spaces are allowed.
.IP \[bu] 2
If the number of options exceed the available space in the widget, the
list will be scrollable.
.IP \[bu] 2
The result is returned as a numeric value, starting from 1.
.RE
.IP \[bu] 2
If you prefer to get the same number in string format, you can use
**MenuDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel,\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[])
.PP
[IMAGE: MenuDlg (./imgs/MenuDlg.png)]
.IP \[bu] 2
\f[B]MessageDlg\f[](text,\f[I]o\f[]\f[I]k\f[]) \- Display a simple
message with an OK button.
.RS 2
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK
.IP \[bu] 2
Returns nothing.
.RE
.IP \[bu] 2
\f[I]Example:\f[]
.RS 2
.IP
.nf
\f[C]
MessageDlg(EncloseText$("This\ is\ a\ simple\ message\ dialog.\ Close\ it\ with\ O\ or\ ENTER\ or\ try\ clicking\ on\ OK."),"OK")
\f[]
.fi
.PP
[IMAGE: MessageDlg (./imgs/MessageDlg.png)]
.RE
.IP \[bu] 2
**PasswordDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel) − \f[I]S\f[]\f[I]a\f[]\f[I]m\f[]\f[I]e\f[]\f[I]a\f[]\f[I]s\f[] * \f[I]I\f[]\f[I]n\f[]\f[I]p\f[]\f[I]u\f[]\f[I]t\f[]\f[I]D\f[]\f[I]l\f[]\f[I]g\f[]*
but with asterisks replacing the input text.
.RS 2
.IP \[bu] 2
The value \f[I]text$\f[] has no effect in whiptail, but is kept here for
compatibility and must be supplied.
This seems to be a bug in the current version of whiptail.
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK
.IP \[bu] 2
The value \f[I]cancel$\f[] is the text of the reject button, normally
Cancel
.IP \[bu] 2
The result is returned as a string value.
.RE
.PP
[IMAGE: PasswordDlg (./imgs/PasswordDlg.png)]
.IP \[bu] 2
\f[B]RadioDlg\f[](text,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
ok,\f[I]c\f[]\f[I]a\f[]\f[I]n\f[]\f[I]c\f[]\f[I]e\f[]\f[I]l\f[],
menustring,\f[I]s\f[]\f[I]e\f[]\f[I]l\f[]\f[I]e\f[]\f[I]c\f[]\f[I]t\f[]\f[I]e\f[]\f[I]d\f[])
\- Create a menu of options for the user to choose from.
.RS 2
.IP \[bu] 2
Same as \f[I]MenuDlg\f[](), except that you can indicate which item in
\f[I]menustring$\f[] is currently selected or active.
.IP \[bu] 2
The value \f[I]title$\f[] is the title on top of the widget
.IP \[bu] 2
The value \f[I]ok$\f[] is the text of the accept button, normally OK.
.IP \[bu] 2
The value \f[I]cancel$\f[] is the text of the reject button, normally
Cancel.
.IP \[bu] 2
The value \f[I]menustring$\f[] is the list of menu options as a single
string, separated by hash signs (#).
Spaces are allowed.
.IP \[bu] 2
The value
\f[I]selected*\f[I]i\f[]\f[I]s\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]c\f[]\f[I]u\f[]\f[I]r\f[]\f[I]r\f[]\f[I]e\f[]\f[I]n\f[]\f[I]t\f[]\f[I]l\f[]\f[I]y\f[]\f[I]s\f[]\f[I]e\f[]\f[I]l\f[]\f[I]e\f[]\f[I]c\f[]\f[I]t\f[]\f[I]e\f[]\f[I]d\f[]\f[I]i\f[]\f[I]t\f[]\f[I]e\f[]\f[I]m\f[]\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]m\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]c\f[]\f[I]o\f[]\f[I]r\f[]\f[I]r\f[]\f[I]e\f[]\f[I]s\f[]\f[I]p\f[]\f[I]o\f[]\f[I]n\f[]\f[I]d\f[]\f[I]t\f[]\f[I]o\f[]\f[I]o\f[]\f[I]n\f[]\f[I]e\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]i\f[]\f[I]t\f[]\f[I]e\f[]\f[I]m\f[]\f[I]s\f[]\f[I]i\f[]\f[I]n\f[] * \f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[]\f[]
\- case sensitive!
.IP \[bu] 2
Just moving the cursor is not enough here \- the value in the menu must
be explicitly selected with SPACE.
.IP \[bu] 2
If the number of options exceed the available space in the widget, the
list will be scrollable.
.IP \[bu] 2
The result is returned as a numeric value, starting from 1.
.IP \[bu] 2
If you prefer to get the same number in string format, you can use
**RadioDlg* * (\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],
title,\f[I]o\f[]\f[I]k\f[],
cancel,\f[I]m\f[]\f[I]e\f[]\f[I]n\f[]\f[I]u\f[]\f[I]s\f[]\f[I]t\f[]\f[I]r\f[]\f[I]i\f[]\f[I]n\f[]\f[I]g\f[],
selected$)
.IP \[bu] 2
This routine does work in whiptail, but the graphical feedback is poor.
This may be a bug in the current version of whiptail.
.IP \[bu] 2
\f[I]EXAMPLE: a = RadioDlg("This is a menu", "A Menu!","Accept", "Deny",
"Science#Religion#Magic#All of the above", "Magic"): print a\f[]
.RE
.PP
[IMAGE: RadioDlg (./imgs/RadioDlg.png)]
.IP \[bu] 2
\f[B]TestForDialogUtility$\f[]() \- Routine to test if the called
utility actually exists on the system.
An empty string returned means it does, otherwise an error message is
returned.
.IP \[bu] 2
\f[B]TextFileDlg\f[](filename,\f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[],
exit) − \f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[]\f[I]f\f[]\f[I]i\f[]\f[I]l\f[]\f[I]e\f[].+\f[I]T\f[]\f[I]h\f[]\f[I]e\f[]\f[I]v\f[]\f[I]a\f[]\f[I]l\f[]\f[I]u\f[]\f[I]e\f[] * \f[I]t\f[]\f[I]i\f[]\f[I]t\f[]\f[I]l\f[]\f[I]e\f[]*
is the title on top of the widget
.RS 2
.IP \[bu] 2
The value \f[I]exit$\f[] is the title of the button.
Normally OK.
.IP \[bu] 2
Text wrapping varies from one dialog\-provider to the next.
It is better if you preformat your text file.
.IP \[bu] 2
Returns nothing.
.RE
.PP
[IMAGE: TextFileDlg (./imgs/TextFileDlg.png)]
.IP \[bu] 2
\f[B]YesNoDlg\f[](text,\f[I]y\f[]\f[I]e\f[]\f[I]s\f[],
no) − \f[I]D\f[]\f[I]i\f[]\f[I]s\f[]\f[I]p\f[]\f[I]l\f[]\f[I]a\f[]\f[I]y\f[]\f[I]s\f[]\f[I]a\f[]\f[I]d\f[]\f[I]i\f[]\f[I]a\f[]\f[I]l\f[]\f[I]o\f[]\f[I]g\f[]\f[I]w\f[]\f[I]i\f[]\f[I]t\f[]\f[I]h\f[]\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[](\f[I]n\f[]\f[I]o\f[]\f[I]r\f[]\f[I]m\f[]\f[I]a\f[]\f[I]l\f[]\f[I]l\f[]\f[I]y\f[]\f[I]a\f[]\f[I]q\f[]\f[I]u\f[]\f[I]e\f[]\f[I]s\f[]\f[I]t\f[]\f[I]i\f[]\f[I]o\f[]\f[I]n\f[])\f[I]a\f[]\f[I]n\f[]\f[I]d\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]o\f[]\f[I]p\f[]\f[I]t\f[]\f[I]i\f[]\f[I]o\f[]\f[I]n\f[]\f[I]s\f[]\f[I]t\f[]\f[I]o\f[]\f[I]r\f[]\f[I]e\f[]\f[I]p\f[]\f[I]l\f[]\f[I]y\f[]\f[I]y\f[]\f[I]e\f[]\f[I]s\f[]\f[I]o\f[]\f[I]r\f[]\f[I]n\f[]\f[I]o\f[].+\f[I]i\f[]\f[I]n\f[] * \f[I]d\f[]\f[I]i\f[]\f[I]a\f[]\f[I]l\f[]\f[I]o\f[]\f[I]g\f[] * ,\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]f\f[]\f[I]i\f[]\f[I]r\f[]\f[I]s\f[]\f[I]t\f[]\f[I]C\f[]\f[I]A\f[]\f[I]P\f[]\f[I]I\f[]\f[I]T\f[]\f[I]A\f[]\f[I]L\f[]\f[I]l\f[]\f[I]e\f[]\f[I]t\f[]\f[I]t\f[]\f[I]e\f[]\f[I]r\f[]\f[I]o\f[]\f[I]f\f[]\f[I]t\f[]\f[I]h\f[]\f[I]e\f[]\f[I]y\f[]\f[I]e\f[]\f[I]s\f[]
and no$ variables will become the hotkeys for those buttons, so make
sure they are different.
This does not matter for the other dialog\-providing utilities.
.RS 2
.IP \[bu] 2
Returns 1 for yes and 0 for no.
.IP \[bu] 2
If you would rather get the same result in string format, use
*YesNoDlg*(\f[I]t\f[]\f[I]e\f[]\f[I]x\f[]\f[I]t\f[],yes,\f[I]n\f[]\f[I]o\f[])
.RE
.PP
[IMAGE: YesNoDlg (./imgs/YesNoDlg.png)]
.SS whiptail\-specific routines
.PP
\f[B]These routines will only work with whiptail.\f[]
.PP
None \- whiptail is the least evolved of the four.
